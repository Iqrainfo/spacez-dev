----Dummy Data for insert user--------

{
  "username": "Sk Asif Ali",
  "email": "asif@gmail.com",
  "password_hash": "123456",
  "mobile_number": "9832698031",
  "identity_card_no": "123456781234",
  "issuing_authority": "string",
  "kyc_done": false,
  "id_created_on": "2024-07-11",
  "created_at": "2024-07-11T16:07:52.070Z",
  "updated_at": "2024-07-11T16:07:52.070Z",
  "last_login": "2024-07-11T16:07:52.070Z"
}



------------------------------------------------




CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE transactions (
    transaction_id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id INTEGER NOT NULL,
    transaction_type VARCHAR(50) NOT NULL,  -- 'deposit', 'withdrawal'
    order_type VARCHAR(20),  -- 'buy', 'sell', 'market', 'limit'
    amount NUMERIC(10, 2) NOT NULL,
    coin_code VARCHAR(10),  -- Cryptocurrency code, e.g., 'BTC', 'ETH'
    price NUMERIC(10, 2),  -- Only for buy/sell transactions
    quantity NUMERIC(10, 2),  -- Only for buy/sell transactions
    total NUMERIC(10, 2) GENERATED ALWAYS AS (price * quantity) STORED,  -- Calculated total for buy/sell
    payment_method VARCHAR(50),  -- Payment method used
    fee_amount NUMERIC(10, 2),  -- Fee amount
    fee_currency VARCHAR(10),  -- Currency of fee
    transaction_status VARCHAR(20) DEFAULT 'pending',  -- 'pending', 'completed', 'failed', 'canceled'
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP NOT NULL DEFAULT NOW(),
    CONSTRAINT fk_user FOREIGN KEY(user_id) REFERENCES users(user_id)
);




PLSQL URL : postgresql://postgres:123456@localhost/spacez


CREATE OR REPLACE FUNCTION initialize_transaction_user_balance()
RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO transactions (transaction_id, user_id,transaction_type,amount,total)
    VALUES (NEW.id, NEW.user_id,NEW.order_type,NEW.order_amount,NEW.clr_balance);  -- Initialize clr_balance as 0.00
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;



CREATE TRIGGER after_user_insert
AFTER INSERT ON user_balance
FOR EACH ROW
EXECUTE FUNCTION initialize_transaction_user_balance();
